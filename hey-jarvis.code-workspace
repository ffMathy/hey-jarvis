{
  "folders": [
    {
      "name": "üè† Root",
      "path": "."
    },
    {
      "name": "üó£Ô∏è ElevenLabs Integration",
      "path": "./elevenlabs"
    },
    {
      "name": "üè† Home Assistant Voice Firmware",
      "path": "./home-assistant-voice-firmware"
    },
    {
      "name": "ü§ñ Jarvis MCP Server",
      "path": "./jarvis-mcp"
    },
    {
      "name": "üè† Home Assistant Addon",
      "path": "./home-assistant-addon"
    }
  ],
  "settings": {
    // Global workspace settings
    "chat.tools.terminal.autoApprove": {
      "mastra": true,
      "timeout": true,
      "nx": true,
      "touch": true,
      "op whoami": {
          "approve": true,
          "matchCommandLine": true
      },
      "npm view": true,
      "npm audit": {
          "approve": true,
          "matchCommandLine": true
      },
      "npm outdated": {
          "approve": true,
          "matchCommandLine": true
      },
      "rm": true,
      "rmdir": true,
      "node": true,
      "npm list": true,
      "git tag": true,
      "gh": true,
      "git rev-parse": true,
      "git add": true,
      "git status": true
    },
    "chat.agent.maxRequests": 1000,
    "nxConsole.generateAiAgentRules": true,
    "chat.useAgentsMdFile": true,
    "chat.tools.terminal.enableAutoApprove": true,
    "chat.tools.terminal.shellIntegrationTimeout": -1,
    "chat.mcp.autostart": "newAndOutdated",
    "chat.mcp.access": "all",
    
    // Encourage NX usage
    "workbench.commandPalette.experimental.suggestCommands": true,
    "workbench.tips.enabled": true,
    
    // TypeScript settings for the monorepo
    "typescript.preferences.preferTypeOnlyAutoImports": true,
    "typescript.suggest.autoImports": true,
    "typescript.preferences.includePackageJsonAutoImports": "on",
    
    // File explorer settings
    "explorer.fileNesting.enabled": true,
    "explorer.fileNesting.expand": false,
    "explorer.fileNesting.patterns": {
      "*.ts": "${capture}.js",
      "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
      "*.jsx": "${capture}.js",
      "*.tsx": "${capture}.ts",
      "tsconfig.json": "tsconfig.*.json",
      "package.json": "package-lock.json, npm-shrinkwrap.json, yarn.lock, pnpm-lock.yaml",
      "*.yaml": "*.yml"
    },
    
    // Search settings
    "search.exclude": {
      "**/node_modules": true,
      "**/dist": true,
      "**/.nx": true,
      "**/*.log": true
    },
    
    // Files settings
    "files.exclude": {
      "**/.git": true,
      "**/.svn": true,
      "**/.hg": true,
      "**/CVS": true,
      "**/.DS_Store": true,
      "**/Thumbs.db": true,
      "**/node_modules": true,
      "**/.nx": true
    },
    "chat.edits2.enabled": true,
    "chat.useChatSessionsForCloudButton": true,
    "inlineChat.enableV2": true
  },
  "extensions": {
    "recommendations": [
      "ms-vscode.cpptools",
      "ms-vscode.cpptools-extension-pack",
      "nrwl.angular-console",
      "1Password.op-vscode",
      "ms-python.python",
      "ms-python.flake8",
      "ms-python.isort",
      "bradlc.vscode-tailwindcss",
      "esbenp.prettier-vscode",
      "ms-vscode.vscode-typescript-next"
    ]
  },
  "tasks": {
    "version": "2.0.0",
    "tasks": [
      {
        "label": "üèóÔ∏è Build All Projects",
        "type": "shell",
        "command": "nx run-many --target=build --all",
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": ["$tsc"]
      },
      {
        "label": "üß™ Test All Projects",
        "type": "shell",
        "command": "nx run-many --target=test --all",
        "group": "test",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        }
      },
      {
        "label": "üöÄ Serve E2E",
        "type": "shell",
        "command": "nx serve e2e",
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "dedicated"
        },
        "isBackground": true
      },
      {
        "label": "ü§ñ Serve Jarvis MCP",
        "type": "shell",
        "command": "nx serve jarvis-mcp",
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "dedicated"
        },
        "isBackground": true
      },
      {
        "label": "üè† Build Voice Firmware",
        "type": "shell",
        "command": "nx build home-assistant-voice-firmware",
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        }
      },
      {
        "label": "üè† Serve Home Assistant Addon",
        "type": "shell",
        "command": "nx serve home-assistant-addon",
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "dedicated"
        },
        "isBackground": true
      }
    ]
  },
  "launch": {
    "version": "0.2.0",
    "configurations": [
      {
        "name": "üß™ Debug E2E",
        "type": "node",
        "request": "launch",
        "program": "${workspaceFolder}/dist/e2e/main.js",
        "console": "integratedTerminal",
        "preLaunchTask": "üèóÔ∏è Build All Projects"
      },
      {
        "name": "ü§ñ Debug Jarvis MCP",
        "type": "node",
        "request": "launch",
        "program": "${workspaceFolder}/jarvis-mcp/mastra/mcp-server.ts",
        "runtimeArgs": ["--loader", "tsx/esm"],
        "console": "integratedTerminal",
        "env": {
          "NODE_ENV": "development"
        }
      }
    ]
  }
}